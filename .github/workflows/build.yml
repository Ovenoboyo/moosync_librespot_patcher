name: Build/release

on: workflow_dispatch

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]

    steps:
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '21'
          cache: 'yarn'
  
      - uses: maxim-lobanov/setup-xcode@v1
        if: ${{ runner.os == 'macOS' }}
        with:
          xcode-version: latest-stable
  
      - if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get update -y && sudo apt-get install -y libasound2-dev libssl-dev libatomic1

      - name: Run clone repos
        shell: bash
        run: |

          if [[ "$OSTYPE" == "darwin"* ]]; then
            brew install gnu-sed
            alias sed=gsed
            PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
          fi

          git config --global url.https://github.com/.insteadOf git://github.com/
          git clone https://github.com/Moosync/librespot-node

          cd librespot-node/native

          git clone https://github.com/librespot-org/librespot -b dev librespot-custom

          sed -i -e '/fn check_catalogue/{n;N;N;N;N;N;N;N;N;d}' librespot-custom/core/src/session.rs
          
          sed -i -e '/Bitrate::from_str(obj.get::<JsString, _, _>(cx, "bitrate")?.value(cx).as_str())/{n;d}' src/utils.rs
          sed -i -e 's/Bitrate::from_str(obj.get::<JsString, _, _>(cx, "bitrate")?.value(cx).as_str())/Bitrate::Bitrate160,/' src/utils.rs

          sed -i -e 's/git = "https:\/\/github.com\/librespot-org\/librespot", branch = \"dev\"/path = ".\/librespot-custom"/g' Cargo.toml
          sed -i -e '/\[dependencies\]/a openssl = { version = "0.10", features = ["vendored"] }' Cargo.toml

          rand_string=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)

          PACKAGE_VERSION=$(cat package.json \
            | grep version \
            | head -1 \
            | awk -F: '{ print $2 }' \
            | sed 's/[",]//g')
          PACKAGE_VERSION="${PACKAGE_VERSION}-${rand_string}"

          os_string = "$(uname -m)_$(uname)"

          echo "::set-output name=osstring::${os_string}"
          echo "::set-output name=version::${PACKAGE_VERSION}"
        id: version

      - uses: rickstaa/action-create-tag@v1
        id: "tag_create"
        with:
          tag: ${{ steps.version.outputs.version }}
          tag_exists_error: false
          message: "Latest release"


      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: librespot-node/native

      - name: Compile
        run: |
          cd librespot-node
          yarn install

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - uses: actions/upload-artifact@v3
        with:
          name: .node
          path: dist/build/*.node

      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/build/librespot.node
          asset_name: librespot-${{ steps.version.outputs.osstring }}-${{ steps.version.outputs.version }}.nide
          asset_content_type: application/zip
